#!/bin/bash

function doBackup {
	EXTDRV=$1
	HOMEDIR=$2
	BACKUPNAME=$3
	
	if [[ ! -d "$EXTDRV" ]]; then
                mkdir -p "$EXTDRV"
        fi

        if [[ -f "$EXTDRV"/backup.tar.gz ]]; then
                lastModDate=`ls --full-time "$EXTDRV"/backup.tar.gz | awk '{print $6}'`
                echo "The last backup done $lastModDate is detected."
                echo -n "Do you want to keep it? [Y/n] "
                read answer
                if [[ $answer == 'N' || $answer == 'n' ]]; then
                        echo "The backup will be overwritten..."
                else
                        echo "Changing name of last file from backup.tar.gz into: backup-$lastModDate.tar.gz..."
                        cp "$EXTDRV"/"$BACKUPNAME" "$EXTDRV"/backup-$lastModDate.tar.gz
                fi
        else
                echo "No previous backups are detected..."
        fi
	
	if [[ `echo $HOMEDIR | grep ^/home/tomek` ]]; then
		echo "The script backups your whole home directiory by default."
		echo "That is: $HOMEDIR"
	elif [[ `echo $HOMEDIR | grep Windows` ]]; then
		echo "The script backups these directories by default:"
		for i in $HOMEDIR; do
			echo $i | awk -F/ '{print $NF}'
		done
	fi

        echo -n "Do you want to change it? [y/N]: "
        read answer

        if [[ $answer == 'Y' || $answer == 'y' ]]; then
		echo -n "Choose what to backup: "
                read files
                echo "Creating the backup of chosen directories..."
                tar -cvzf "$EXTDRV"/"$BACKUPNAME" $files 2>> ~/log/error.log
        else
                echo "Creating the backup of your home directiory..."
                tar -cvzf "$EXTDRV"/"$BACKUPNAME" $HOMEDIR 2>> ~/log/error.log

        fi

	date "+%d/%m/%Y %X %Z (%A)"  >> "$EXTDRV"/backup.log 2>> ~/log/error.log
        echo "Backup succeded."

	exit
}


SCRIPTNAME=`echo $0 | awk -F/ '{print $NF}'`
mounted=`cat /proc/mounts | grep "/media/tomek/My"`
backupDIR=`cat ~/bin/.$SCRIPTNAME.config | grep BACKUPDIR | cut -d " " -f 3-`


if [[ $1 == '-h' || $1 == '-?' || $1 == '--help' ]]; then
        cat ~/bin/.$SCRIPTNAME.help
        exit
fi

if [[ ! $mounted ]]; then
	echo; echo "The external drive is not mounted."
	echo; echo " Try:	backup [-h] [-?] [--help] for help"; echo
	exit 1
fi


if [[ $1 == '--linux' ]] || (( $# == 0 )); then

	doBackup "$backupDIR"/Linux "$HOME/*" backup.tar.gz
fi

if [[ $1 == '--linux-full' ]]; then
	doBackup "$backupDIR"/Linux $HOME backup.tar.gz
fi

if [[ $1 == '--windows' || $1 == '-w' ]]; then
	wasMounted=`windows --short-info`
	WINHOME="/media/tomek/Windows/Users/Tomek"
        directories=`cat $HOME/bin/.$SCRIPTNAME.config | grep WINDOWS | awk '{print $3}'`
        directories=${directories//:/" $WINHOME/"}

	if [[ $wasMounted == 0 ]]; then
		windows -m
	fi

	doBackup "$backupDIR"/Windows "$directories" backup.tar.gz
	
	if [[ $wasMounted == 0 ]]; then
		windows -u
	fi
fi

echo "An error occurred. Exit code: 2"
exit 2
